# 사과팔꺼임 한상자에 m개씩 담아 포장 k 점이 최상품 사과
# 상자에 담긴 사과중 가장 단가가 낮은 사과를 기준으로 개수 * p 해서 상자별 가격이 매겨집니다
# 가장 비싸게 팔아서 최대 이익을 얻을 수 있는 함수 만들기

# 음.. m개씩 담아야하니까 그걸 고려해서 가장 비싼것들끼리 담는게 좋을거같다. 
# 만약 k 끼리 m 개 담을수있으면 그렇게 담는게 제일 이득이다.
# 모두 팔아야한다는 얘기가 없으니까 그게 맞는거같다.
# m = 3   1,2,2,2,3,3,3,

# 역순으로 정렬한 다음 최대한 팔아먹는게 맞다

def solution(k, m, score):
    answer = 0
    score.sort(reverse=True) # 역순 정렬
    box = []
    for i in score :
        box.append(i)
        if len(box) == m : # 박스를 모두 채웠을때
            answer += i * m # 마지막에 넣은 (상자내에서 가장 싼 사과값) 값으로 따져서 팔기
            box = [] # 박스 비우기
    print(answer)
    return answer