# 빨리 끝내고 쉬자
# 벽 길이 n 롤러길이 m 
# 한번에 m 만큼 칠해지는거임. 이떄 칠할때 m 만큼 한번에 칠해짐. 만약 가능한 m 의 범위안에 섹션이 포함되어있다면
# 최대한 한번에 칠하느넛이 좋다
# 최소화된 횟수를 구하기

# 음.. 숫자? 로 어케 하면될거같은데. 최소횟수니까 한번에 최대한 많은걸 하되.. 근데 중간부터 칠하면 의미가 없으므로 
# 우선 시작은 가장 작은숫자부터. 일거같다. 롤러의 시작부분이 섹션의 시작부분인것이 가장 합리적일테니까?
# 그 상태에서 나머지를 구하면 되는거 아닐까
# @ # # @ # # @ #  이 상태일때 가장 많은 순으로 하면 3,4,5,6 을 칠해서 3개를 한번에 칠하는게 첫번째인데, 그럼 안된다.
# 역시 롤러의 시작부분이 섹션의 시작부분인것이 가장 효율적으로 해를 구할수있는방법일듯

def solution(n, m, section):
    
    walls = [_ for _ in range(1,n+1)] # 번호가 담긴 리스트 생성
    roll = section[0] + m - 1 # 롤러의 시작점
    answer = 1 # 롤러의 시작점이 정해졌으니 한번 값을 올리고 시작
    for i in section :
        if i > roll : #만약 한번의 롤러질로 칠해진곳이 아니라면
            roll = i + m -1
            answer +=1
    return answer